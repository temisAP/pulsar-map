// Generated by CoffeeScript 2.3.0
(function () {
  // original pulsar ids
  this.original_ids = ["J1731-4744", "J1456-6843", "J1243-6423", "J0835-4510", "J0953+0755", "J0826+2637", "J0534+2200", "J0528+2200", "J0332+5434", "J2219+4754", "J2018+2839", "J1935+1616", "J1932+1059", "J1645-0317"];

  this.dot = function (coordinates, color = 'red') {
    var c;
    c = new paper.Path.Circle(coordinates, 3);
    return c.fillColor = color;
  };

  this.drawPulsar = function (pulsar, center, factor = 6, color = 'black', drawlines = true, fontFamily = 'Verdana', fontSize = 12, fontWeight = 'bold') {
    var dashes, distance, midPoint, path, rect, rightCenter, shift, text;
    dashes = pulsar.period.replace(/0/g, 'âˆ™');
    dashes = dashes.replace(/1/g, '|');
    text = new paper.PointText({
      point: center,
      content: dashes,
      fillColor: color,
      fontFamily: fontFamily,
      fontSize: fontSize,
      fontWeight: fontWeight
    });
    // shift the position
    rightCenter = text.parentToLocal(text.bounds.rightCenter);
    distance = pulsar.distance * factor;
    shift = [distance, -rightCenter.y];
    midPoint = center.add(shift);
    text.point = midPoint;
    text.pivot = text.parentToLocal(center);
    if (drawlines) {
      path = new paper.Path(center, center.add([distance, 0]));
      path.strokeColor = color;
      path.pivot = center;
      path.rotate(pulsar.angle);
      // add a background so the lines don't mess up the pattern
      rect = new paper.Path.Rectangle(text.bounds);
      rect.fillColor = 'white';
      rect.pivot = rect.parentToLocal(center);
      rect.rotate(pulsar.angle);
      rect.sendToBack();
    }
    // do this last, so the background rectangle has the right dimensions:
    return text.rotate(pulsar.angle);
  };

  this.convertATNF = function (data) {
    var H_transition, count;
    H_transition = new BigNumber('7.04024183647e-10');
    count = 0;
    return _.map(data, function (pulsar) {
      var Hperiod, binary, dist, period, result, rounded;
      count++;
      period = new BigNumber(pulsar.P0);
      Hperiod = period.div(H_transition);
      rounded = Math.round(Hperiod.toNumber());
      binary = rounded.toString(2);
      dist = new BigNumber(pulsar.DIST).toNumber();
      return result = {
        psr: count,
        period: binary,
        angle: 360 - pulsar.Gl, // for some weird reason, everything is mirrored
        distance: new BigNumber(pulsar.DIST).toNumber(),
        lum: pulsar.R_LUM,
        lum_14: pulsar.R_LUM14
      };
    });
  };
}).call(this);
//# sourceMappingURL=data:application/json;base64,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QUEsQ0FBVDtBQUNBLGdCQUFVLE9BQUEsR0FBQSxDQUFBLFlBQUEsQ0FBVjtBQUNBLGdCQUFVLEtBQUEsS0FBQSxDQUFXLFFBQVgsUUFBVyxFQUFYLENBQVY7QUFDQSxlQUFTLFFBQUEsUUFBQSxDQUFBLENBQUEsQ0FBVDtBQUNBLGFBQU8sSUFBQSxTQUFBLENBQWMsT0FBZCxJQUFBLEVBQUEsUUFBQSxFQUFQO2FBQ0EsU0FDRztBQUFBLGFBQUEsS0FBQTtBQUNBLGdCQURBLE1BQUE7QUFFQSxlQUFPLE1BQUksT0FGWCxFQUFBLEVBQUE7QUFHQSxrQkFBVSxJQUFBLFNBQUEsQ0FBYyxPQUFkLElBQUEsRUFIVixRQUdVLEVBSFY7QUFJQSxhQUFLLE9BSkwsS0FBQTtBQUtBLGdCQUFRLE9BQU87QUFMZixPO0FBUkMsS0FBQSxDQUFQO0FBSFksR0FBZjtDQXhDQSxFLElBQUEsQyxJQUFBIiwic291cmNlc0NvbnRlbnQiOlsiXG4jIG9yaWdpbmFsIHB1bHNhciBpZHNcbkBvcmlnaW5hbF9pZHMgPSBbIFwiSjE3MzEtNDc0NFwiLFwiSjE0NTYtNjg0M1wiLFwiSjEyNDMtNjQyM1wiLFwiSjA4MzUtNDUxMFwiLFwiSjA5NTMrMDc1NVwiLFwiSjA4MjYrMjYzN1wiLFwiSjA1MzQrMjIwMFwiLFwiSjA1MjgrMjIwMFwiLFwiSjAzMzIrNTQzNFwiLFwiSjIyMTkrNDc1NFwiLFwiSjIwMTgrMjgzOVwiLFwiSjE5MzUrMTYxNlwiLFwiSjE5MzIrMTA1OVwiLFwiSjE2NDUtMDMxN1wiXVxuXG5AZG90ID0gKGNvb3JkaW5hdGVzLGNvbG9yPSdyZWQnKS0+XG4gICBjID0gbmV3IHBhcGVyLlBhdGguQ2lyY2xlKGNvb3JkaW5hdGVzLDMpXG4gICBjLmZpbGxDb2xvciA9IGNvbG9yXG5cbkBkcmF3UHVsc2FyID0gKHB1bHNhcixjZW50ZXIsZmFjdG9yPTYsY29sb3I9J2JsYWNrJyxkcmF3bGluZXM9dHJ1ZSxmb250RmFtaWx5PSdWZXJkYW5hJyxmb250U2l6ZT0xMixmb250V2VpZ2h0PSdib2xkJyktPlxuICAgZGFzaGVzID0gcHVsc2FyLnBlcmlvZC5yZXBsYWNlKC8wL2csJ+KImScpXG4gICBkYXNoZXMgPSBkYXNoZXMucmVwbGFjZSgvMS9nLCd8JylcbiAgIHRleHQgPSBuZXcgcGFwZXIuUG9pbnRUZXh0XG4gICAgICBwb2ludDogY2VudGVyXG4gICAgICBjb250ZW50OiBkYXNoZXNcbiAgICAgIGZpbGxDb2xvcjogY29sb3JcbiAgICAgIGZvbnRGYW1pbHk6IGZvbnRGYW1pbHlcbiAgICAgIGZvbnRTaXplOiBmb250U2l6ZVxuICAgICAgZm9udFdlaWdodDogZm9udFdlaWdodFxuICAgIyBzaGlmdCB0aGUgcG9zaXRpb25cbiAgIHJpZ2h0Q2VudGVyID0gdGV4dC5wYXJlbnRUb0xvY2FsKHRleHQuYm91bmRzLnJpZ2h0Q2VudGVyKVxuICAgZGlzdGFuY2UgPSBwdWxzYXIuZGlzdGFuY2UqZmFjdG9yXG4gICBzaGlmdCA9IFtkaXN0YW5jZSwtcmlnaHRDZW50ZXIueV1cbiAgIG1pZFBvaW50ID0gY2VudGVyLmFkZCBzaGlmdFxuICAgdGV4dC5wb2ludCA9IG1pZFBvaW50XG4gICB0ZXh0LnBpdm90ID0gdGV4dC5wYXJlbnRUb0xvY2FsKGNlbnRlcilcbiAgIFxuICAgaWYgZHJhd2xpbmVzXG4gICAgICBwYXRoID0gbmV3IHBhcGVyLlBhdGggY2VudGVyLGNlbnRlci5hZGQoW2Rpc3RhbmNlLDBdKVxuICAgICAgcGF0aC5zdHJva2VDb2xvciA9IGNvbG9yXG4gICAgICBwYXRoLnBpdm90ID0gY2VudGVyXG4gICAgICBwYXRoLnJvdGF0ZSBwdWxzYXIuYW5nbGVcbiAgICAgICMgYWRkIGEgYmFja2dyb3VuZCBzbyB0aGUgbGluZXMgZG9uJ3QgbWVzcyB1cCB0aGUgcGF0dGVyblxuICAgICAgcmVjdCA9IG5ldyBwYXBlci5QYXRoLlJlY3RhbmdsZSh0ZXh0LmJvdW5kcylcbiAgICAgIHJlY3QuZmlsbENvbG9yID0gJ3doaXRlJ1xuICAgICAgcmVjdC5waXZvdCA9IHJlY3QucGFyZW50VG9Mb2NhbCBjZW50ZXJcbiAgICAgIHJlY3Qucm90YXRlIHB1bHNhci5hbmdsZVxuICAgICAgcmVjdC5zZW5kVG9CYWNrKClcbiAgICMgZG8gdGhpcyBsYXN0LCBzbyB0aGUgYmFja2dyb3VuZCByZWN0YW5nbGUgaGFzIHRoZSByaWdodCBkaW1lbnNpb25zOlxuICAgdGV4dC5yb3RhdGUgcHVsc2FyLmFuZ2xlXG5cbkBjb252ZXJ0QVRORiA9IChkYXRhKS0+XG4gICBIX3RyYW5zaXRpb24gPSBuZXcgQmlnTnVtYmVyKCc3LjA0MDI0MTgzNjQ3ZS0xMCcpXG4gICBjb3VudCA9IDBcbiAgIHJldHVybiBfLm1hcCBkYXRhLCAocHVsc2FyKS0+XG4gICAgICBjb3VudCsrXG4gICAgICBwZXJpb2QgPSBuZXcgQmlnTnVtYmVyKHB1bHNhci5QMClcbiAgICAgIEhwZXJpb2QgPSBwZXJpb2QuZGl2KEhfdHJhbnNpdGlvbilcbiAgICAgIHJvdW5kZWQgPSBNYXRoLnJvdW5kKEhwZXJpb2QudG9OdW1iZXIoKSlcbiAgICAgIGJpbmFyeSA9IHJvdW5kZWQudG9TdHJpbmcoMilcbiAgICAgIGRpc3QgPSBuZXcgQmlnTnVtYmVyKHB1bHNhci5ESVNUKS50b051bWJlcigpXG4gICAgICByZXN1bHQgPVxuICAgICAgICAgcHNyOiBjb3VudFxuICAgICAgICAgcGVyaW9kOiBiaW5hcnlcbiAgICAgICAgIGFuZ2xlOiAzNjAtcHVsc2FyLkdsICMgZm9yIHNvbWUgd2VpcmQgcmVhc29uLCBldmVyeXRoaW5nIGlzIG1pcnJvcmVkXG4gICAgICAgICBkaXN0YW5jZTogbmV3IEJpZ051bWJlcihwdWxzYXIuRElTVCkudG9OdW1iZXIoKVxuICAgICAgICAgbHVtOiBwdWxzYXIuUl9MVU1cbiAgICAgICAgIGx1bV8xNDogcHVsc2FyLlJfTFVNMTRcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==
//# sourceURL=/Users/thomas/Documents/Projects/Creative/Tattoo/Pulsar map/js/lib.coffee